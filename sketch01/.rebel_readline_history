1532292297409:exit
1532292471870:(use `sketch01.core)
1532292520183:(refresh)
1532292560649:(require '[sketch01.core :refer :all])
1532292878569:(use `sketch01.core)
1532292933138:exit
1532292934901:exit()
1532292937907:(exit)
1532292979060:(use `sketch01.core)
1532293013752:exit
1532294101466:(use `sketch.core)
1532294124146:exit
1532294145868:(use `sketch.core)
1532294166900:exit
1532294230611:(use `sketch.core)
1532294247231:exit
1532294300786:(use `sketch.core)
1532294359234:(refresh)
1532294673549:(use `sketch.core)
1532294675549:(refresh)
1532297870394:(use `sketch.core)
1532297979460:(refresh)
1532298002214:(use :reload `sketch.core)
1532298342020:(refresh)
1532298460845:(use :reload `sketch.core)
1532316027121:(use `sketch.core)
1532316125612:(use :reload `sketch.core)
1532316716496:(use :reload `sketch.dynamic)
1532316731289:(update-state {})
1532316949695:(use :reload `sketch.core)
1532317251058:(assoc {} :counter 3)
1532317272868:(def temp {})
1532317284883:(assoc temp :counter 3)
1532317286740:temp
1532317366438:(update-in [:counter] dec (assoc temp :counter 3))
1532317386174:(update-in (assoc temp :counter 3)) [:counter] dec)
1532317401223:(update-in (assoc temp :counter 3) [:counter] dec))
1532317406063:(update-in (assoc temp :counter 3) [:counter] dec)
1532317467249:(use :reload `sketch.core)
1532924375181:(rand-int 255)
1532924400319:(mod 200 radius)
1532924408822:(mod 200 2000)
1532924477424:(use :reload `sketch.core)
1532925096687:(* (+ (/ (q/width) 2) (rand-int 255) -1)\n   )
1532925119670:(* (+ (/ (4000) 2) (rand-int 255) -1))
1532925129638:(* (+ (/ 4000 2) (rand-int 255) -1))
1532925138846:(* (+ (/ 2000 2) (rand-int 255) -1))
1532925189560:(use :reload `sketch.core)
1532926294398:(not= 40 50)
1532926302469:(use :reload `sketch.core)
